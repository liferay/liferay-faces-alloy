<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:alloy="http://liferay.com/faces/alloy"
	xmlns:f="http://xmlns.jcp.org/jsf/core" xmlns:showcase="http://liferay.com/faces/showcase"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets" template="/WEB-INF/templates/component-2col.xhtml">

	<ui:define name="col1">
		<!-- Example 1: Server-side custom filtering method -->
		<alloy:form>
			<showcase:example description="#{i18n['alloy-autocomplete-custom-filter-example-1']}" number="1">
				<alloy:field label="#{i18n['favorite-liferay-benefit']}">
					<alloy:autoComplete serverCustomFilter="#{autoCompleteBackingBean.serverCustomFilter}"
						value="#{autoCompleteModelBean.text}">
						<f:selectItem itemValue="Compatible" />
						<f:selectItem itemValue="Enterprise Ready" />
						<f:selectItem itemValue="Powerful Integration" />
						<f:selectItem itemValue="Lightweight" />
						<f:selectItem itemValue="Open Source" />
					</alloy:autoComplete>
				</alloy:field>
				<hr />
				<alloy:commandButton render="@form" value="#{i18n['submit']}" />
			</showcase:example>
			<showcase:results label="#{i18n['model-value']}">
				<alloy:outputText id="modelValue" value="#{autoCompleteModelBean.text}" />
			</showcase:results>
		</alloy:form>
	</ui:define>

	<ui:define name="col2">
		<!-- Example 2: Client-side custom filtering callback -->
		<alloy:outputScript library="js" name="autocomplete-filter.js" />
		<alloy:form>
			<showcase:example description="#{i18n['alloy-autocomplete-custom-filter-example-2']}" number="2">
				<alloy:field label="#{i18n['favorite-liferay-benefit']}">
					<alloy:autoComplete clientCustomFilter="clientCustomFilter"
						value="#{autoCompleteModelBean.text}">
						<f:selectItem itemValue="Compatible" />
						<f:selectItem itemValue="Enterprise Ready" />
						<f:selectItem itemValue="Powerful Integration" />
						<f:selectItem itemValue="Lightweight" />
						<f:selectItem itemValue="Open Source" />
					</alloy:autoComplete>
				</alloy:field>
				<hr />
				<alloy:commandButton render="@form" value="#{i18n['submit']}" />
			</showcase:example>
			<showcase:results label="#{i18n['model-value']}">
				<alloy:outputText id="modelValue" value="#{autoCompleteModelBean.text}" />
			</showcase:results>
		</alloy:form>
	</ui:define>

</ui:composition>
